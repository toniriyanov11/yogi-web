<div class="container-fluid"  id="app">
    <div class="page-title-box">
        <div class="row align-items-center">
            <div class="col-sm-6">
                <h4 class="page-title"><i class="mdi mdi-printer-3d-nozzle"></i> <%= title %></h4>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-right">
                    <li class="breadcrumb-item"><a href="javascript:void(0);">Yogi</a></li>
                    <li class="breadcrumb-item active">Dashboard</li>
                </ol>
            </div>
        </div>
        <!-- end row -->
    </div>
    <!-- end page-title -->

    <!-- START ROW -->
    <div class="row">
        <div class="col-12">
            <div class="card m-b-30">
                <div class="card-body">

                    <div class="row">
                        <div class="col-sm-6">
                            <h4 class="mt-0 mb-4 header-title">Edit data sablon</h4>
                        </div>
                        <div class="col-sm-6">
                            <h4 class="mt-0 mb-4 header-title text-right"><%= data.id%></h4>
                        </div>
                     </div>
                    
                     <div class="form-group row">
                        <label for="example-date-input" class="col-sm-2 col-form-label">Tanggal</label>
                            <div class="col-auto">
                                <div class="input-group">
                                    <vuejs-datepicker  v-model="dataResponses.tanggal" @input="convertDataTanggal" :format="customFormatter"></vuejs-datepicker>
                                </div><!-- input-group -->
                            </div>
                    </div>
                    <div class="form-group row">
                        <label for="example-text-input" class="col-sm-2 col-form-label">Pilih Data Cutting</label>
                        <div class="col-sm-10">
                             <multiselect disabled v:model="dataResponses.detil"   :options="options" :multiple="true" :close-on-select="false" :clear-on-select="false" :preserve-search="true" placeholder=""  label="id" track-by="id" :preselect-first="true">
                                <template slot="selection" slot-scope="{ values, search, isOpen }"><span class="multiselect__single" v-if="values.length &amp;&amp; !isOpen">{{ values.length }} options selected</span></template>
                              </multiselect>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="example-search-input" class="col-sm-2 col-form-label">Nama Item</label>
                        <div class="col-sm-10">
                            <input class="form-control" type="text" v-model="dataResponses.nama" id="example-text-input">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="example-search-input" class="col-sm-2 col-form-label">Upah/pcs (Rp)</label>
                        <div class="col-sm-10">
                            <input disabled class="form-control" type="text" v-model="upah" id="example-search-input">
                        </div>
                    </div>
                    <hr>
                    <div class="form-group row">
                        <label for="example-search-input" class="col-sm-2 col-form-label">Total Harga/Pcs (Rp)</label>
                        <div class="col-sm-10">
                            <input disabled class="form-control" type="text" v-model="totalHarga" id="example-search-input">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="example-search-input" class="col-sm-2 col-form-label">Banyak (pcs)</label>
                        <div class="col-sm-10">
                            <input disabled class="form-control" type="text" v-model="dataResponses.totalJumlah" id="example-search-input">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="example-text-input" class="col-sm-2 col-form-label">Keterangan</label>
                        <div  class="col-sm-10">
                            <textarea required class="form-control" v-model="dataResponses.ket" rows="3"></textarea>
                        </div>
                    </div>
                    <hr>
                    <div class="form-group row">
                        <label for="example-number-input" class="col-sm-2 col-form-label">Total Upah (Rp)</label>
                        <div class="col-sm-10">
                            <input disabled class="form-control" type="text" v-model="totalUpah" id="example-number-input">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="example-number-input" class="col-sm-2 col-form-label">Harga Barang (Rp)</label>
                        <div class="col-sm-10">
                            <input disabled class="form-control" type="text" v-model="hargaBarang" id="example-number-input">
                        </div>
                    </div>
                    <div class="form-group text-right">
                        <div>
                            <button @click="checkValidation()" class="btn btn-primary waves-effect waves-light">
                                Submit
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div> <!-- end col -->
    </div>
    <!-- END ROW -->

    <div class="row">
        <div class="col-12">
            <div class="card m-b-30">
                <div class="card-body">

                    <h4 class="mt-0 mb- header-title">Sub Item</h4>
                    <div class="table-responsive">
                        <table class="table mb-0">
                            <thead>
                                <tr>
                                    <th>No</th>
                                    <th>Nama Item</th>
                                    <th>Banyak(Pcs)</th>
                                    <th>Total Biaya/Pcs(Rp)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="dataItem in dataResponses.detil" :key="dataItem.idItem">
                                    <td><a @click="detilItem(dataItem.idItem)" style="color:#2980b9">{{dataItem.idItem}}</a></td>
                                    <td>{{dataItem.namaItem}}</td>
                                    <td>{{dataItem.jumlahItem}}</td>
                                    <td>{{convertFloatToRupiah((dataItem.totalBiayaItemPerPcs).toString())}}</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                   
                </div>
            </div>
        </div> <!-- end col -->
    </div>

</div>

<script>
    const apiUrl = '<%=process.env.URL%>'
    var app = new Vue({
     el: '#app',
     components: {
            vuejsDatepicker, Multiselect: window.VueMultiselect.default
    },
     data: {
         id:'',
         dataResponses:{
         },
         options:[],
         upah:'',
         totalHarga:'',
         totalUpah:'',
         hargaBarang:'',
         tglSekarang:moment().format('YYYY-MM-DD'),
     },
     async created() {
        this.id = JSON.parse('<%-data%>')
        await this.getDataItem()
        await this.getData(this.id)
        await this.handleResponseVariable()
     },
     watch: {
        upah: function (val) {
            var result = this.convertFloatToRupiah(val.toString())
            this.upah = result
        },
        totalHarga: function (val) {
            var result = this.convertFloatToRupiah(val.toString())
            this.totalHarga = result
        },
        totalUpah: function (val) {
            var result = this.convertFloatToRupiah(val.toString())
            this.totalUpah = result
        },
        hargaBarang: function (val) {
            var result = this.convertFloatToRupiah(val.toString())
            this.hargaBarang = result
        },     
     },
     methods : {
        getData: async function(id) {
            try{
                const res = await axios.post(apiUrl+'dataproduksi/sablon/edit/'+id)
                this.dataResponses = res.data[0]
                console.log(this.dataResponses)
            }catch(err){
                alert("Get data"+' '+err)
            }
        },
        actEdit: async function() {
            try{
                var data = this.dataResponses
                const res = await axios.post(apiUrl+'dataproduksi/sablon/edit', { data:data })
                if (res.data.success){
                    this.alertSuccess(res.data.msg)
                    setTimeout(function(){ window.location.href = apiUrl + 'dataproduksi/sablon'; }, 1000);
                }
            }catch(err){
                alert("Edit data"+' '+err)
            }
        },
        getDataItem: async function() {
            try{
                 const res = await axios.post(apiUrl+'dataproduksi/cutting')
                 this.options = res.data
                 console.log(this.options)
             }catch(err){
                 alert("Get data Item"+' '+err)
             }
        },
        checkValidation: async function(){
            var validate = false
            if (this.dataResponses.tanggal == "" || this.dataResponses.nama == "" || this.dataResponses.item == [] 
            || this.dataResponses.upah == ""  || this.dataResponses.ket == "" ) {
                validate = false
            } else {
                validate = true
            }

            if(validate){
                this.alertEdit()
            }else{
                alert("Harap isi semua field")
            }
        },
        customFormatter(date) {
            return moment(date).format("DD/MM/YYYY");
        },
        convertDataTanggal: function(val){
            var convert = moment(val).format("YYYY-MM-DD")
            this.dataResponses.tanggal = convert
        },
        convertFloatToRupiah: function (val) {
            var txtNumber = parseFloat(val.replace(/,/g, ''))
            var txtString = txtNumber.toString()
            var sisa = txtString.length % 3
            var rupiah = txtString.substr(0, sisa)
            var ribuan = txtString.substr(sisa).match(/\d{3}/g)
            if (ribuan) {
                var separator = sisa ? ',' : ''
                rupiah += separator + ribuan.join(',')
            }

            return rupiah
        },
        handleResponseVariable(){
            this.upah = this.dataResponses.upah
            this.totalHarga = Math.ceil(this.dataResponses.totalBiaya)
            this.totalUpah = this.dataResponses.totalJumlah * parseInt(this.dataResponses.upah)
            this.hargaBarang = Math.ceil(this.dataResponses.totalBiaya + parseInt(this.dataResponses.upah))
        },
        alertEdit:  function (data) {
             swal({
                title: "Anda yakin ingin merubah data?",
                text: "Pastikan data yang anda ubah benar",
                icon: "warning",
                buttons: ["batal", "ubah"],
                dangerMode: false,
                })
                .then((willEdit) => {
                if (willEdit) {
                     this.actEdit(data)
                }
            });
        },
        alertSuccess: function (message){
            swal({
                title:"",
                text:message, 
                icon:"success",
                buttons:false});
            }
        }
     })
 </script>