<div class="container-fluid" id="app">
    <div class="page-title-box">
        <div class="row align-items-center">
            <div class="col-sm-6">
                <h4 class="page-title"><i class="icon-arrow-down"></i> <%= title %></h4>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-right">
                    <li class="breadcrumb-item"><a href="javascript:void(0);">Yogi</a></li>
                    <li class="breadcrumb-item active">Dashboard</li>
                </ol>
            </div>
        </div>
        <!-- end row -->
    </div>
    <!-- end page-title -->

    <!-- START button-->
    <div class="row">
        <div class="col py-3 text-right">
          <button type="button" class="btn btn-primary waves-effect waves-light"  @click="tambah()"><i class="mdi mdi-plus align-middle mr-2"></i>Tambah Pemasukan</button>
        </div>
    </div>
    <!-- end button -->

    <!-- START ROW -->
    <div class="row">
        <div class="col-12">
            <div class="card m-b-30">
                <div class="card-body">

                    <h4 class="mt-0 header-title">Data Pemasukan</h4>
                    
                    <table id="datatable-buttons" class="table table-bordered dt-responsive nowrap" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                        <thead>
                        <tr>
                            <th>Tanggal</th>
                            <th>No</th>
                            <th>Jenis Pemasukan</th>
                            <th>Nama Item</th>
                            <th>banyak</th>
                            <th>Nominal (Rp)</th>
                            <th>Status Bayar</th>
                            <th>Action</th>
                        </tr>
                        </thead>


                        <tbody>
                    
                        <tr v-for="dataResponse in dataResponses" :key="dataResponse.id">
                           
                            <td>{{dataResponse.tanggal}}</td>
                            <td class="clicked"><a @click="detil(dataResponse.id)">{{dataResponse.id}}</a></td>
                            <td>{{dataResponse.ketJenisPemasukan}}</td>
                            <td>{{dataResponse.nama}}</td>
                            <td>{{dataResponse.jumlah}}</td>
                            <td>{{convertToRupiah(dataResponse.nominal)}}</td> 
                            <td>{{dataResponse.ketStatusBayar}}</td> 
                            <td>
                                <button type="button" @click="edit(dataResponse.id)"  class="btn btn-light waves-effect"><i class="icon-pencil"></i></button>
                                <button type="button" @click="alertDelete(dataResponse.id)" class="btn btn-light waves-effect"><i class="icon-delete"></i></button>
                            </td>
                        </tr>
        
                        </tbody>
                    </table>
                </div>
            </div>
        </div> <!-- end col -->
    </div> 
    <!-- END ROW -->

</div>

<script>
    const apiUrl = '<%= process.env.URL %>'
    var app = new Vue({
     el: '#app',
     data: {
         dataResponses : {}
     },
     created() {
        this.getData()
     },
     methods:{
        edit: function(id){
            location.href = "/pemasukan/edit/"+id
        },
        detil: function(id){
            location.href = "/pemasukan/detil/"+id
        },
        tambah: function(){
            location.href = "/pemasukan/tambah"
        },
        getData: async function() {
            try{
                const res = await axios.post(apiUrl+'pemasukan')
                this.dataResponses = res.data
            }catch(err){
                alert("Get data"+' '+err)
            }
        },
        deleteData: async function(id){
            try{
                const res = await axios.post(apiUrl+'pemasukan/hapus/'+id)
                if (res.data.success){
                    this.alertSuccess(res.data.msg)
                    setTimeout(function(){ location.reload(); }, 1000);
                } else {
                    alert(res.data.msg)
                }
            }catch(err){
                alert("Delete data"+' '+err)
            }
        },
        convertToRupiah: function (val) {
            var txtNumber = parseFloat(val)
            var txtString = txtNumber.toString()
            var sisa = txtString.length % 3
            var rupiah = txtString.substr(0, sisa)
            var ribuan = txtString.substr(sisa).match(/\d{3}/g)
            if (ribuan) {
                var separator = sisa ? ',' : ''
                rupiah += separator + ribuan.join(',')
            }
            return rupiah
        },
        alertDelete:  function (data) {
             swal({
                title: "Anda yakin ingin menghapus data?",
                text: "Ketika data terhapus, data tidak dapat dikembalikan!",
                icon: "warning",
                buttons: ["batal", "ya,hapus!"],
                dangerMode: true,
                })
                .then((willDelete) => {
                if (willDelete) {
                     this.deleteData(data)
                }
            });
        },
        alertSuccess: function (message){
            swal({
                title:"",
                text:message, 
                icon:"success",
                buttons:false});
        }
     }
     })
 </script>
